name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: reading-dashboard/package-lock.json

      - name: Install dependencies
        working-directory: ./reading-dashboard
        run: npm ci

      - name: Run linter
        working-directory: ./reading-dashboard
        run: npm run lint

      - name: Check TypeScript types
        working-directory: ./reading-dashboard
        run: npm run type-check

      - name: Check code formatting
        working-directory: ./reading-dashboard
        run: npm run format:check

      - name: Run tests
        working-directory: ./reading-dashboard
        run: npm test

      - name: Build project
        working-directory: ./reading-dashboard
        run: npm run build

  python-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black

      - name: Check Python code formatting
        run: |
          black --check *.py || true

      - name: Lint Python code
        run: |
          flake8 *.py --max-line-length=100 --ignore=E203,W503 || true
